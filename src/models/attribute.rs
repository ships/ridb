/* 
 * RIDB API
 *
 * The Recreation Information Database (RIDB) provides data resources to citizens, offering a single point of access to information about recreational opportunities nationwide. The RIDB represents an authoritative source of information and services for millions of visitors to federal lands, historic sites, museums, and other attractions/resources. This initiative integrates multiple Federal channels and sources about recreation opportunities into a one-stop, searchable database of recreational areas nationwide.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Attribute {
  #[serde(rename = "AttributeID")]
  attribute_id: Option<i32>,
  #[serde(rename = "AttributeName")]
  attribute_name: String,
  #[serde(rename = "AttributeValue")]
  attribute_value: String
}

impl Attribute {
  pub fn new(attribute_name: String, attribute_value: String) -> Attribute {
    Attribute {
      attribute_id: None,
      attribute_name: attribute_name,
      attribute_value: attribute_value
    }
  }

  pub fn set_attribute_id(&mut self, attribute_id: i32) {
    self.attribute_id = Some(attribute_id);
  }

  pub fn with_attribute_id(mut self, attribute_id: i32) -> Attribute {
    self.attribute_id = Some(attribute_id);
    self
  }

  pub fn attribute_id(&self) -> Option<&i32> {
    self.attribute_id.as_ref()
  }

  pub fn reset_attribute_id(&mut self) {
    self.attribute_id = None;
  }

  pub fn set_attribute_name(&mut self, attribute_name: String) {
    self.attribute_name = attribute_name;
  }

  pub fn with_attribute_name(mut self, attribute_name: String) -> Attribute {
    self.attribute_name = attribute_name;
    self
  }

  pub fn attribute_name(&self) -> &String {
    &self.attribute_name
  }


  pub fn set_attribute_value(&mut self, attribute_value: String) {
    self.attribute_value = attribute_value;
  }

  pub fn with_attribute_value(mut self, attribute_value: String) -> Attribute {
    self.attribute_value = attribute_value;
    self
  }

  pub fn attribute_value(&self) -> &String {
    &self.attribute_value
  }


}



