/* 
 * RIDB API
 *
 * The Recreation Information Database (RIDB) provides data resources to citizens, offering a single point of access to information about recreational opportunities nationwide. The RIDB represents an authoritative source of information and services for millions of visitors to federal lands, historic sites, museums, and other attractions/resources. This initiative integrates multiple Federal channels and sources about recreation opportunities into a one-stop, searchable database of recreational areas nationwide.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct InlineResponse200MetadataResults {
  #[serde(rename = "CURRENT_COUNT")]
  CURRENT_COUNT: Option<i32>,
  #[serde(rename = "TOTAL_COUNT")]
  TOTAL_COUNT: Option<i32>
}

impl InlineResponse200MetadataResults {
  pub fn new() -> InlineResponse200MetadataResults {
    InlineResponse200MetadataResults {
      CURRENT_COUNT: None,
      TOTAL_COUNT: None
    }
  }

  pub fn set_CURRENT_COUNT(&mut self, CURRENT_COUNT: i32) {
    self.CURRENT_COUNT = Some(CURRENT_COUNT);
  }

  pub fn with_CURRENT_COUNT(mut self, CURRENT_COUNT: i32) -> InlineResponse200MetadataResults {
    self.CURRENT_COUNT = Some(CURRENT_COUNT);
    self
  }

  pub fn CURRENT_COUNT(&self) -> Option<&i32> {
    self.CURRENT_COUNT.as_ref()
  }

  pub fn reset_CURRENT_COUNT(&mut self) {
    self.CURRENT_COUNT = None;
  }

  pub fn set_TOTAL_COUNT(&mut self, TOTAL_COUNT: i32) {
    self.TOTAL_COUNT = Some(TOTAL_COUNT);
  }

  pub fn with_TOTAL_COUNT(mut self, TOTAL_COUNT: i32) -> InlineResponse200MetadataResults {
    self.TOTAL_COUNT = Some(TOTAL_COUNT);
    self
  }

  pub fn TOTAL_COUNT(&self) -> Option<&i32> {
    self.TOTAL_COUNT.as_ref()
  }

  pub fn reset_TOTAL_COUNT(&mut self) {
    self.TOTAL_COUNT = None;
  }

}



